name: Cross-platform Build and Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache Go modules & build cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24.3"

      - name: Test unit
        run: |
          make test

  build:
    needs: test
    continue-on-error: false
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Cache Go modules & build cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24.3"

      - name: Hydrate .version with given tag
        run: echo "${{ github.ref_name }}" > cmd/.version

      - name: Build
        run: |
          make build+all

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: coda
          path: _bin/*
          retention-days: 1

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: _bin

      - name: Install unzip
        run: sudo apt-get update && sudo apt-get install -y unzip

      - name: Create tar.gz and zip files
        run: |
          mkdir -p _dist
          mv _bin/coda/ _bin/coda-binaries
          cp _bin/coda-binaries/coda-darwin-amd64 _bin/coda && tar -czf _dist/coda-darwin-amd64.tar.gz -C _bin coda && rm _bin/coda
          cp _bin/coda-binaries/coda-darwin-arm64 _bin/coda && tar -czf _dist/coda-darwin-arm64.tar.gz -C _bin coda && rm _bin/coda
          cp _bin/coda-binaries/coda-linux-amd64 _bin/coda && tar -czf _dist/coda-linux-amd64.tar.gz -C _bin coda && rm _bin/coda
          cp _bin/coda-binaries/coda-linux-arm64 _bin/coda && tar -czf _dist/coda-linux-arm64.tar.gz -C _bin coda && rm _bin/coda

          cp _bin/coda-binaries/coda-windows-amd64.exe _bin/coda.exe && zip -j _dist/coda-windows-amd64.zip _bin/coda.exe && rm _bin/coda.exe
          cp _bin/coda-binaries/coda-windows-arm64.exe _bin/coda.exe && zip -j _dist/coda-windows-arm64.zip _bin/coda.exe && rm _bin/coda.exe

      - name: Generate CHANGELOG.md
        run: |
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null \
                    || git rev-list --max-parents=0 HEAD)
          echo "## Changelog" > CHANGELOG.md
          git log $PREV_TAG..HEAD --pretty=format:"* %h %s" >> CHANGELOG.md
          cat CHANGELOG.md

      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          body_path: CHANGELOG.md
          draft: false
          tag_name: ${{ github.ref_name }}
          make_latest: "true"
          files: _dist/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
